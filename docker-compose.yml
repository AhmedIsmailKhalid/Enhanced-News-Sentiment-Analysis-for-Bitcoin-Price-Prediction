version: '3.8'

services:
  # PostgreSQL Database (Local Development)
  postgres:
    image: postgres:15-alpine
    container_name: bitcoin_sentiment_postgres
    environment:
      POSTGRES_USER: bitcoin_user
      POSTGRES_PASSWORD: bitcoin_password
      POSTGRES_DB: bitcoin_sentiment_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/development/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bitcoin_user -d bitcoin_sentiment_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bitcoin_network
    restart: unless-stopped

  # Redis Cache (Feature Store & Caching)
  redis:
    image: redis:7-alpine
    container_name: bitcoin_sentiment_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bitcoin_network
    restart: unless-stopped

  # Adminer (Database Management UI - Optional)
  adminer:
    image: adminer:latest
    container_name: bitcoin_sentiment_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    networks:
      - bitcoin_network
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - tools

  # Redis Commander (Redis Management UI - Optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: bitcoin_sentiment_redis_commander
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    networks:
      - bitcoin_network
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  bitcoin_network:
    driver: bridge